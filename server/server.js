
var fs = require("fs");
var express = require("express");

var app = express();

var server = require('http').Server(app);

var io = require('socket.io')(server);

app.use(express.static("../client"));

app.get("/", function (req, res) {
    res.redirect("index.html");
});

server.listen(3000, function () {

    console.log("App is running on port 3000");

});
grassArr = [];
grassEaterArr = [];
predatorArr = [];
personArr = [];
personEaterArr = [];
predatorEaterArr = []


LivingCreature = require("./modules/LivingCreature");
Grass = require("./modules/class_Grass");
GrassEater = require("./modules/class_GrassEater");
Predator = require("./modules/class_Predator");
PredatorEater = require("./modules/class_PredatorEater");
Person = require("./modules/class_Person");
PersonEater = require("./modules/class_PersonEater");

multForGrass = 8

io.on("connection", function (socket) {

    socket.on("afterClick", function (data) {
        multForGrass = data.multForGrass
    });
    setInterval(drawForBackend, 5000);

});

matrix = [
    [3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 1, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 1, 8, 0],
    [1, 0, 0, 0, 8, 0, 0, 0, 0, 2, 0, 3, 2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2, 1, 0, 0, 0, 8, 0, 0, 0, 0, 2, 0, 3, 2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2],
    [0, 1, 0, 2, 3, 0, 8, 0, 0, 0, 8, 0, 1, 0, 4, 0, 8, 1, 4, 0, 4, 2, 0, 3, 0, 1, 0, 2, 3, 0, 8, 0, 0, 0, 8, 0, 1, 0, 4, 0, 8, 1, 4, 0, 4, 2, 0, 3],
    [2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 1, 8, 0, 3, 2, 0, 0, 3, 0, 0, 2, 0, 2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 1, 8, 0, 3, 2, 0, 0, 3, 0, 0, 2, 0],
    [4, 8, 0, 0, 8, 0, 0, 3, 1, 0, 2, 0, 1, 0, 3, 0, 8, 3, 1, 0, 4, 2, 0, 3, 4, 8, 0, 0, 8, 0, 0, 3, 1, 0, 2, 0, 1, 0, 3, 0, 8, 3, 1, 0, 4, 2, 0, 3],
    [8, 3, 8, 0, 0, 4, 2, 0, 1, 0, 0, 1, 1, 4, 0, 0, 8, 4, 0, 0, 0, 2, 0, 3, 8, 3, 8, 0, 0, 4, 2, 0, 1, 0, 0, 1, 1, 4, 0, 0, 8, 4, 0, 0, 0, 2, 0, 3],
    [2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 8, 1, 2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 8, 1],
    [3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0],
    [1, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 3, 2, 1, 0, 1, 2, 1, 0, 8, 0, 0, 8, 2, 1, 0, 0, 0, 8, 0, 4, 0, 0, 2, 0, 3, 2, 1, 0, 1, 2, 1, 0, 8, 0, 0, 8, 2],
    [0, 1, 0, 2, 3, 0, 8, 0, 4, 0, 8, 0, 4, 0, 2, 3, 8, 0, 0, 0, 4, 2, 0, 3, 0, 1, 0, 2, 3, 0, 8, 0, 4, 0, 8, 0, 4, 0, 2, 3, 8, 0, 0, 0, 4, 2, 0, 3],
    [2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 1, 8, 0, 0, 8, 3, 4, 3, 0, 0, 2, 0, 2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 1, 8, 0, 0, 8, 3, 4, 3, 0, 0, 2, 0],
    [1, 8, 0, 0, 8, 0, 0, 3, 0, 0, 2, 0, 1, 0, 3, 2, 3, 0, 0, 0, 4, 2, 0, 3, 1, 8, 0, 0, 8, 0, 0, 3, 0, 0, 2, 0, 1, 0, 3, 2, 3, 0, 0, 0, 4, 2, 0, 3],
    [8, 3, 8, 0, 0, 4, 2, 0, 1, 0, 0, 1, 1, 0, 0, 0, 8, 3, 0, 4, 0, 2, 1, 3, 8, 3, 8, 0, 0, 4, 2, 0, 1, 0, 0, 1, 1, 0, 0, 0, 8, 3, 0, 4, 0, 2, 1, 3],
    [4, 1, 0, 1, 2, 0, 0, 8, 0, 4, 8, 2, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 8, 1, 4, 1, 0, 1, 2, 0, 0, 8, 0, 4, 8, 2, 0, 3, 0, 0, 2, 0, 1, 0, 0, 0, 8, 1],
    [3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 2, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 1, 0, 2, 0, 8, 0, 3, 0, 1, 8, 0, 3, 2, 0, 2, 0, 8, 0],
    [1, 0, 0, 0, 8, 0, 0, 1, 0, 2, 0, 3, 2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2, 1, 0, 0, 0, 8, 0, 0, 1, 0, 2, 0, 3, 2, 1, 0, 1, 2, 0, 0, 8, 0, 0, 8, 2],
    [0, 1, 0, 2, 3, 0, 8, 0, 0, 0, 8, 0, 1, 0, 0, 0, 8, 1, 4, 0, 0, 2, 0, 3, 0, 1, 0, 2, 3, 0, 8, 0, 0, 0, 8, 0, 1, 0, 0, 0, 8, 1, 4, 0, 0, 2, 0, 3],
    [2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 0, 8, 1, 0, 8, 0, 0, 3, 0, 0, 2, 0, 2, 2, 3, 0, 0, 1, 0, 8, 2, 3, 0, 3, 0, 8, 1, 0, 8, 0, 0, 3, 0, 0, 2, 0],
    [1, 8, 0, 0, 8, 4, 0, 3, 0, 0, 2, 0, 1, 0, 0, 1, 8, 2, 4, 0, 4, 2, 0, 3, 1, 8, 0, 0, 8, 4, 0, 3, 0, 0, 2, 0, 1, 0, 0, 1, 8, 2, 4, 0, 4, 2, 0, 3],
    [8, 3, 8, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 8, 0, 8, 0, 0, 0, 0, 2, 0, 3, 8, 3, 8, 0, 0, 0, 2, 0, 1, 0, 0, 1, 1, 0, 8, 0, 8, 0, 0, 0, 0, 2, 0, 3],
    [2, 1, 0, 1, 2, 3, 0, 8, 0, 0, 8, 2, 0, 3, 0, 3, 2, 3, 1, 0, 0, 0, 8, 1, 2, 1, 0, 1, 2, 3, 0, 8, 0, 0, 8, 2, 0, 3, 0, 3, 2, 3, 1, 0, 0, 0, 8, 1]
];

// matrix2 = [
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],
//     [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
// ];

var isFemale = true;

function createObjects() {
    for (var y = 0; y < matrix.length; ++y) {
        for (var x = 0; x < matrix[y].length; ++x) {
            if (matrix[y][x] == 1) {
                var gr = new Grass(x, y, 1);
                grassArr.push(gr);
            }

            else if (matrix[y][x] == 2) {
                isFemale = isFemale
                var grEater = new GrassEater(x, y, 2);
                grassEaterArr.push(grEater)
            }
            else if (matrix[y][x] == 8) {
                var prEater = new PredatorEater(x, y, 8);
                predatorEaterArr.push(prEater)
            }
            else if (matrix[y][x] == 3) {
                var prs = new Person(x, y, 3);
                personArr.push(prs)
            }
            else if (matrix[y][x] == 4) {
                var pse = new PersonEater(x, y, 4);
                personEaterArr.push(pse)
            }
        }
    }
}

createObjects()


function drawForBackend() {
    for (var i in grassArr) {
        grassArr[i].mul(multForGrass)
    }
    for (var i in grassEaterArr) {
        grassEaterArr[i].eat();
        grassEaterArr[i].mul();
        grassEaterArr[i].move()
        grassEaterArr[i].die();
    }
    for (var i in predatorArr) {
        predatorArr[i].eat();
        predatorArr[i].mul();
        predatorArr[i].move();
        predatorArr[i].die();
    }
    for (var i in predatorEaterArr) {
        predatorEaterArr[i].eat();
        predatorEaterArr[i].mul();
        predatorEaterArr[i].move();
        predatorEaterArr[i].die();
    }
    for (var i in personArr) {
        personArr[i].eat();
        console.log(personArr[i])
        personArr[i].mul();
        personArr[i].move();
        personArr[i].die();
    }
    for (var i in personEaterArr) {
        personEaterArr[i].eat();
        personEaterArr[i].mul();
        personEaterArr[i].move();
        personEaterArr[i].die();
    }

    let sendData = {
        matrix: matrix
    }

    statistics = {
        grasses: grassArr.length,
        grassEaters: grassEaterArr.length,
        persons: personArr.length,
        personEaters: personEaterArr.length,
        predators: predatorArr.length,
        predatorEaters: predatorEaterArr.length,
    }
    fs.writeFileSync('statistics.json', JSON.stringify(statistics, undefined, 2))
    mystatistics = fs.readFileSync('statistics.json').toString()
    io.sockets.emit("sendStatistics", JSON.parse(mystatistics))
    io.sockets.emit("matrix", sendData)
}

setInterval(drawForBackend, 500)